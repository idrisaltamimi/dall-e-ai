import React, { ChangeEvent, SetStateAction, useEffect, useState } from 'react'

import { Card, FormField, Loader } from '../components'

interface allPostsType {
  _id: string,
  name: string,
  prompt: string,
  photo: string,
}

const postPlaceholder = { _id: '', name: '', photo: '', prompt: '' }

const Home = () => {
  const [loading, setLoading] = useState(false)
  const [allPosts, setAllPosts] = useState<allPostsType[]>([postPlaceholder])
  const [searchText, setSearchText] = useState('')
  const [searchedResult, setSearchedResult] = useState<allPostsType[]>([postPlaceholder])
  const [searchTimeout, setSearchTimeout] = useState<any>(null)


  useFetchPosts(setLoading, setAllPosts)

  const handleSearchChange = (e: ChangeEvent) => {
    clearTimeout(searchTimeout)
    const target = e.target as HTMLInputElement
    setSearchText(target.value)

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(item => (
          item.name.toLowerCase().includes(searchText.toLowerCase()) ||
          item.prompt.toLowerCase().includes(searchText.toLowerCase())
        ))

        setSearchedResult(searchResult)
      }, 500)
    )
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div className='font-extrabold text-[#222328] text-[32px]'>
        <h1>The Community Showcase</h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className='mt-16'>
        <FormField
          label='Search posts'
          type='text'
          name='text'
          placeholder='search posts'
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing result for <span className='text-[#222328]'>{searchText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs-grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards data={searchedResult} title='No search result found' />
              ) : (
                <RenderCards data={allPosts} title='no posts found' />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home

const RenderCards = ({ data, title }: { data: any, title: string }) => {
  if (data[0]._id !== '') return (
    data.map((post: any) => <Card key={data._id} {...post} />
    ))

  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  )
}

const useFetchPosts = (
  setLoading: (loading: any) => void,
  setAllPosts: (allPosts: any) => void,
) => {
  useEffect(() => {
    const getPosts = async () => {
      setLoading(true)

      try {
        const response = await fetch('http://localhost:8000/api/v1/post',
          {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' },
          })
        if (response.ok) {
          const result = await response.json()

          setAllPosts(result.data.reverse())
        }
      } catch (error) {
        alert(error)
      } finally {
        setLoading(false)
      }
    }

    getPosts()
  }, [])
}